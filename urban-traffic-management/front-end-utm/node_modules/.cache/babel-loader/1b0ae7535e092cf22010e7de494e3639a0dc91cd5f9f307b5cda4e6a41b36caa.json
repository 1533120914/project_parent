{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"ModifyPasswordView\",\n  data() {\n    return {\n      account: null,\n      formData: {\n        oldPassword: null,\n        newPassword: null\n      },\n      rules: {\n        oldPassword: [{\n          required: true,\n          message: '原密码不能为空',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // 把用户id和identity一起放入formData发给后端\n          this.formData.id = this.account.id;\n          this.formData.identity = this.account.identity;\n          this.$http.post('/account/modify-password', this.formData).then(data => {\n            localStorage.removeItem('account');\n            this.$msgbox.alert('请重新登录', '密码修改成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.$router.push('/');\n              }\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  created() {\n    this.account = JSON.parse(localStorage.getItem('account'));\n  }\n};","map":{"version":3,"names":["name","data","account","formData","oldPassword","newPassword","rules","required","message","trigger","methods","submitForm","formName","$refs","validate","valid","id","identity","$http","post","then","localStorage","removeItem","$msgbox","alert","confirmButtonText","callback","action","$router","push","resetForm","resetFields","created","JSON","parse","getItem"],"sources":["src/views/ModifyPasswordView.vue"],"sourcesContent":["<template>\r\n<el-card>\r\n  <div slot=\"header\" style=\"display: flex; justify-content: space-between;align-items: center\">\r\n    <span>修改密码</span>\r\n  </div>\r\n  <div>\r\n    <el-form ref=\"form\" :rules=\"rules\" :model=\"formData\">\r\n      <el-form-item label=\"请输入原密码\" prop=\"oldPassword\">\r\n        <el-input v-model=\"formData.oldPassword\" placeholder=\"请输入原密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"请输入新密码\"  prop=\"newPassword\">\r\n        <el-input v-model=\"formData.newPassword\" placeholder=\"请输入原密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('form')\">保存</el-button>\r\n        <el-button @click=\"resetForm('form')\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ModifyPasswordView\",\r\n  data() {\r\n    return {\r\n      account: null,\r\n      formData: {\r\n        oldPassword: null,\r\n        newPassword: null\r\n      },\r\n      rules: {\r\n        oldPassword: [\r\n          {required: true, message:'原密码不能为空', trigger:'blur'}\r\n        ],\r\n        newPassword: [\r\n          {required: true, message:'新密码不能为空', trigger:'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // 把用户id和identity一起放入formData发给后端\r\n          this.formData.id = this.account.id\r\n          this.formData.identity = this.account.identity\r\n          this.$http.post('/account/modify-password', this.formData)\r\n          .then((data) => {\r\n            localStorage.removeItem('account')\r\n            this.$msgbox.alert('请重新登录', '密码修改成功', {\r\n              confirmButtonText: '确定',\r\n              callback: action => {\r\n                this.$router.push('/')\r\n              }\r\n            })\r\n          })\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  },\r\n  created() {\r\n    this.account = JSON.parse(localStorage.getItem('account'))\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAuBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;QACAC,WAAA;QACAC,WAAA;MACA;MACAC,KAAA;QACAF,WAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,WAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAZ,QAAA,CAAAa,EAAA,QAAAd,OAAA,CAAAc,EAAA;UACA,KAAAb,QAAA,CAAAc,QAAA,QAAAf,OAAA,CAAAe,QAAA;UACA,KAAAC,KAAA,CAAAC,IAAA,kCAAAhB,QAAA,EACAiB,IAAA,CAAAnB,IAAA;YACAoB,YAAA,CAAAC,UAAA;YACA,KAAAC,OAAA,CAAAC,KAAA;cACAC,iBAAA;cACAC,QAAA,EAAAC,MAAA;gBACA,KAAAC,OAAA,CAAAC,IAAA;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC,UAAAlB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAmB,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA9B,OAAA,GAAA+B,IAAA,CAAAC,KAAA,CAAAb,YAAA,CAAAc,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}