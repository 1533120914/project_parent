{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport { MessageBox } from \"element-ui\";\nimport LoginView from \"@/views/LoginView\";\nimport HomeView from \"@/views/HomeView\";\nimport AccuseTypeSaveView from \"@/views/AccuseTypeSaveView\";\nimport AccuseTypeView from \"@/views/AccuseTypeView\";\nimport AccuseSaveView from \"@/views/AccuseSaveView\";\nimport AccuseView from \"@/views/AccuseView\";\nimport AccuseApplyView from \"@/views/AccuseApplyView\";\nimport ModifyPasswordView from \"@/views/ModifyPasswordView\";\nimport PersonalView from \"@/views/PersonalView\";\nimport StatisticsView from \"@/views/StatisticsView\";\nimport UserView from \"@/views/UserView\";\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  component: LoginView\n}, {\n  path: '/home',\n  component: HomeView,\n  children: [{\n    path: '/accuse-type',\n    component: AccuseTypeView\n  }, {\n    path: '/accuse-type/save',\n    component: AccuseTypeSaveView\n  }, {\n    path: '/accuse/save',\n    component: AccuseSaveView\n  }, {\n    path: '/accuse',\n    component: AccuseView\n  }, {\n    path: '/accuse/apply/:id',\n    component: AccuseApplyView\n  }, {\n    path: '/modify-password',\n    component: ModifyPasswordView\n  }, {\n    path: '/personal',\n    component: PersonalView\n  }, {\n    path: '/statistics',\n    component: StatisticsView\n  }, {\n    path: '/user',\n    component: UserView\n  }]\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// 路由守卫 (路由拦截器, 拦截每一次的路由请求, 不要与http的拦截器搞混了)\n// beforeEach()这个函数在进入每个路由之前触发\n// to 是要去的路由对象\n// from 是从哪来的路由对象\n// next 是函数 next()放行 next('路由地址')去指定的路由地址\nrouter.beforeEach((to, from, next) => {\n  // 如果要去的路由地址是'/' (去登录界面)\n  if (to.path == '/') {\n    next(); // 直接放行\n    return;\n  }\n  // 如果不是去登录界面, 就要校验他有没有登录\n  // 1. 从存储中获取account\n  let account = localStorage.getItem('account');\n  // 2. 判断account是否为null\n  if (account == null) {\n    // account为null\n    MessageBox.alert('请重新登录', '登录过期', {\n      confirmButtonText: '确定',\n      callback: action => {\n        // 点确定后, 跳转去登录界面\n        next('/');\n      }\n    });\n  } else {\n    // account不为null, 直接放行\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","MessageBox","LoginView","HomeView","AccuseTypeSaveView","AccuseTypeView","AccuseSaveView","AccuseView","AccuseApplyView","ModifyPasswordView","PersonalView","StatisticsView","UserView","use","routes","path","component","children","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","account","localStorage","getItem","alert","confirmButtonText","callback","action"],"sources":["C:/Users/常/IdeaProjects/project_parent/urban-traffic-management/front-end-utm/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport {MessageBox} from \"element-ui\";\r\n\r\nimport LoginView from \"@/views/LoginView\";\r\nimport HomeView from \"@/views/HomeView\";\r\nimport AccuseTypeSaveView from \"@/views/AccuseTypeSaveView\";\r\nimport AccuseTypeView from \"@/views/AccuseTypeView\";\r\nimport AccuseSaveView from \"@/views/AccuseSaveView\";\r\nimport AccuseView from \"@/views/AccuseView\";\r\nimport AccuseApplyView from \"@/views/AccuseApplyView\";\r\nimport ModifyPasswordView from \"@/views/ModifyPasswordView\";\r\nimport PersonalView from \"@/views/PersonalView\";\r\nimport StatisticsView from \"@/views/StatisticsView\";\r\nimport UserView from \"@/views/UserView\";\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  { path:'/', component:LoginView },\r\n  { path:'/home', component:HomeView, children: [\r\n      { path:'/accuse-type', component:AccuseTypeView },\r\n      { path:'/accuse-type/save', component:AccuseTypeSaveView },\r\n      { path:'/accuse/save', component:AccuseSaveView },\r\n      { path:'/accuse', component:AccuseView },\r\n      { path:'/accuse/apply/:id', component:AccuseApplyView },\r\n      { path:'/modify-password', component:ModifyPasswordView },\r\n      { path:'/personal', component:PersonalView },\r\n      { path:'/statistics', component:StatisticsView },\r\n      { path:'/user', component:UserView },\r\n    ]}\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\n\r\n// 路由守卫 (路由拦截器, 拦截每一次的路由请求, 不要与http的拦截器搞混了)\r\n// beforeEach()这个函数在进入每个路由之前触发\r\n// to 是要去的路由对象\r\n// from 是从哪来的路由对象\r\n// next 是函数 next()放行 next('路由地址')去指定的路由地址\r\nrouter.beforeEach((to, from, next) => {\r\n  // 如果要去的路由地址是'/' (去登录界面)\r\n  if (to.path == '/') {\r\n    next() // 直接放行\r\n    return\r\n  }\r\n  // 如果不是去登录界面, 就要校验他有没有登录\r\n  // 1. 从存储中获取account\r\n  let account = localStorage.getItem('account');\r\n  // 2. 判断account是否为null\r\n  if (account == null){ // account为null\r\n    MessageBox.alert('请重新登录', '登录过期', {\r\n      confirmButtonText: '确定',\r\n      callback: action => {\r\n        // 点确定后, 跳转去登录界面\r\n        next('/')\r\n      }\r\n    })\r\n  }else { // account不为null, 直接放行\r\n    next();\r\n  }\r\n})\r\n\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,UAAU,QAAO,YAAY;AAErC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,kBAAkB,MAAM,4BAA4B;AAC3D,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,QAAQ,MAAM,kBAAkB;AAEvCb,GAAG,CAACc,GAAG,CAACb,SAAS,CAAC;AAElB,MAAMc,MAAM,GAAG,CACb;EAAEC,IAAI,EAAC,GAAG;EAAEC,SAAS,EAACd;AAAU,CAAC,EACjC;EAAEa,IAAI,EAAC,OAAO;EAAEC,SAAS,EAACb,QAAQ;EAAEc,QAAQ,EAAE,CAC1C;IAAEF,IAAI,EAAC,cAAc;IAAEC,SAAS,EAACX;EAAe,CAAC,EACjD;IAAEU,IAAI,EAAC,mBAAmB;IAAEC,SAAS,EAACZ;EAAmB,CAAC,EAC1D;IAAEW,IAAI,EAAC,cAAc;IAAEC,SAAS,EAACV;EAAe,CAAC,EACjD;IAAES,IAAI,EAAC,SAAS;IAAEC,SAAS,EAACT;EAAW,CAAC,EACxC;IAAEQ,IAAI,EAAC,mBAAmB;IAAEC,SAAS,EAACR;EAAgB,CAAC,EACvD;IAAEO,IAAI,EAAC,kBAAkB;IAAEC,SAAS,EAACP;EAAmB,CAAC,EACzD;IAAEM,IAAI,EAAC,WAAW;IAAEC,SAAS,EAACN;EAAa,CAAC,EAC5C;IAAEK,IAAI,EAAC,aAAa;IAAEC,SAAS,EAACL;EAAe,CAAC,EAChD;IAAEI,IAAI,EAAC,OAAO;IAAEC,SAAS,EAACJ;EAAS,CAAC;AACrC,CAAC,CACL;AAED,MAAMM,MAAM,GAAG,IAAIlB,SAAS,CAAC;EAC3BmB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BT;AACF,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACAI,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACV,IAAI,IAAI,GAAG,EAAE;IAClBY,IAAI,CAAC,CAAC,EAAC;IACP;EACF;EACA;EACA;EACA,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC7C;EACA,IAAIF,OAAO,IAAI,IAAI,EAAC;IAAE;IACpB3B,UAAU,CAAC8B,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE;MAChCC,iBAAiB,EAAE,IAAI;MACvBC,QAAQ,EAAEC,MAAM,IAAI;QAClB;QACAP,IAAI,CAAC,GAAG,CAAC;MACX;IACF,CAAC,CAAC;EACJ,CAAC,MAAK;IAAE;IACNA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAGF,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}