{"ast":null,"code":"export default {\n  name: \"TaskView\",\n  data() {\n    return {\n      account: null,\n      typeList: [],\n      createDate: null,\n      param: {\n        title: null,\n        typeId: null,\n        lowDate: null,\n        highDate: null,\n        current: 1,\n        size: 10\n      },\n      tableData: [],\n      total: 0,\n      pages: 0,\n      sizes: [5, 10, 20, 50, 100],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  watch: {\n    createDate: {\n      handler(newVal, oldVal) {\n        if (newVal) {\n          this.param.lowDate = newVal[0];\n          this.param.highDate = newVal[1];\n        } else {\n          this.param.lowDate = null;\n          this.param.highDate = null;\n        }\n      }\n    }\n  },\n  methods: {\n    getTaskTypeList() {\n      this.$http.get('/accuse-type/list').then(data => {\n        this.typeList = data;\n      });\n    },\n    getTableData() {\n      if (this.account.identity == 3) {\n        this.param.userId = this.account.id;\n      }\n      this.$http.get('/accuse/query', {\n        params: this.param\n      }).then(data => {\n        this.tableData = data.records;\n        this.total = data.total;\n        this.pages = data.pages;\n      });\n    },\n    currentChange(val) {\n      this.param.current = val;\n      this.getTableData();\n    },\n    // 当size改变时的回调行数\n    sizeChange(val) {\n      this.param.size = val;\n      this.getTableData();\n    },\n    resetForm() {\n      this.param.title = null;\n      this.param.typeId = null;\n      this.param.lowDate = null;\n      this.param.highDate = null;\n      this.param.state = null;\n    },\n    handleDelete(id) {\n      this.$confirm('是否确认删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        this.$http.get('/accuse/del/' + id).then(data => {\n          this.getTableData();\n        });\n      });\n    }\n  },\n  created() {\n    this.account = JSON.parse(localStorage.getItem('account'));\n    this.getTaskTypeList();\n    this.getTableData();\n  }\n};","map":{"version":3,"names":["name","data","account","typeList","createDate","param","title","typeId","lowDate","highDate","current","size","tableData","total","pages","sizes","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","watch","handler","newVal","oldVal","methods","getTaskTypeList","$http","get","then","getTableData","identity","userId","id","params","records","currentChange","val","sizeChange","resetForm","state","handleDelete","$confirm","confirmButtonText","cancelButtonText","created","JSON","parse","localStorage","getItem"],"sources":["src/views/AccuseView.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" style=\"display: flex; justify-content: space-between;align-items: center\">\r\n      <span>投诉列表</span>\r\n    </div>\r\n    <div>\r\n      <el-form :inline=\"true\" :model=\"param\" style=\"min-width: 1000px\">\r\n        <el-form-item>\r\n          <el-input v-model=\"param.title\" placeholder=\"投诉标题\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select v-model=\"param.typeId\" placeholder=\"投诉类型\">\r\n            <el-option v-for=\"type in typeList\" :key=\"type.id\" :label=\"type.name\" :value=\"type.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select v-model=\"param.state\" placeholder=\"投诉状态\">\r\n            <el-option label=\"未处理\" value=\"0\"></el-option>\r\n            <el-option label=\"已处理\" value=\"1\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-date-picker\r\n              v-model=\"createDate\"\r\n              type=\"daterange\"\r\n              align=\"right\"\r\n              unlink-panels\r\n              value-format=\"yyyy-MM-dd\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              :picker-options=\"pickerOptions\">\r\n            <!-- pickerOptions官方写好了  -->\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <!-- 搜索按钮也是调用getCarList方法 -->\r\n        <el-button type=\"primary\" @click=\"getTableData\">搜索</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form>\r\n      <el-table :data=\"tableData\" stripe border max-height=\"600\" style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"投诉编号\" min-width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"typeName\" label=\"投诉类型\" min-width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"title\" label=\"投诉主题\" min-width=\"150\"></el-table-column>\r\n        <el-table-column label=\"投诉状态\" min-width=\"150\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag v-if=\"scope.row.state==0\" type=\"info\">未处理</el-tag>\r\n            <el-tag v-if=\"scope.row.state==1\" type=\"success\">已处理</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" min-width=\"300px\">\r\n          <template v-slot=\"scope\">\r\n            <el-button v-if=\"account.identity==1\" type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\r\n            <el-button v-if=\"scope.row.state == 1\" size=\"mini\" @click=\"$router.push('/accuse/apply/' + scope.row.id)\">查看详情</el-button>\r\n            <el-button v-if=\"account.identity==2 && scope.row.state == 0\" type=\"primary\" size=\"mini\" @click=\"$router.push('/accuse/apply/' + scope.row.id)\">去处理</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n          style=\"margin-top: 20px\"\r\n          background\r\n          layout=\"sizes,prev, pager, next, jumper, total\"\r\n          :page-size=\"param.size\"\r\n          :current-page=\"param.current\"\r\n          :page-sizes=\"sizes\"\r\n          :total=\"total\"\r\n          :page-count=\"pages\"\r\n          @current-change=\"currentChange\"\r\n          @size-change=\"sizeChange\">\r\n      </el-pagination>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TaskView\",\r\n  data() {\r\n    return {\r\n      account: null,\r\n      typeList:[],\r\n      createDate: null,\r\n      param:{\r\n        title: null,\r\n        typeId: null,\r\n        lowDate: null,\r\n        highDate: null,\r\n        current: 1,\r\n        size: 10\r\n      },\r\n      tableData: [],\r\n      total:0,\r\n      pages:0,\r\n      sizes:[5, 10, 20, 50, 100],\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    createDate: {\r\n      handler(newVal, oldVal) {\r\n        if (newVal) {\r\n          this.param.lowDate = newVal[0]\r\n          this.param.highDate = newVal[1]\r\n        }else {\r\n          this.param.lowDate = null\r\n          this.param.highDate = null\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getTaskTypeList() {\r\n      this.$http.get('/accuse-type/list').then((data) => {\r\n        this.typeList = data\r\n      })\r\n    },\r\n    getTableData() {\r\n      if(this.account.identity == 3) {\r\n        this.param.userId = this.account.id\r\n      }\r\n      this.$http.get('/accuse/query', {\r\n        params: this.param\r\n      }).then((data) => {\r\n        this.tableData = data.records\r\n        this.total = data.total\r\n        this.pages = data.pages\r\n      })\r\n    },\r\n    currentChange(val){\r\n      this.param.current = val\r\n      this.getTableData()\r\n    },\r\n    // 当size改变时的回调行数\r\n    sizeChange(val){\r\n      this.param.size = val\r\n      this.getTableData()\r\n    },\r\n    resetForm() {\r\n      this.param.title = null\r\n      this.param.typeId = null\r\n      this.param.lowDate = null\r\n      this.param.highDate = null\r\n      this.param.state = null\r\n    },\r\n    handleDelete(id) {\r\n      this.$confirm('是否确认删除?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消'\r\n      }).then(() => {\r\n        this.$http.get('/accuse/del/' + id)\r\n            .then((data) => {\r\n              this.getTableData()\r\n            })\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.account = JSON.parse(localStorage.getItem('account'))\r\n    this.getTaskTypeList()\r\n    this.getTableData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA2EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,UAAA;MACAC,KAAA;QACAC,KAAA;QACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,SAAA;MACAC,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;MACA;IACA;EACA;EACAM,KAAA;IACAvB,UAAA;MACAwB,QAAAC,MAAA,EAAAC,MAAA;QACA,IAAAD,MAAA;UACA,KAAAxB,KAAA,CAAAG,OAAA,GAAAqB,MAAA;UACA,KAAAxB,KAAA,CAAAI,QAAA,GAAAoB,MAAA;QACA;UACA,KAAAxB,KAAA,CAAAG,OAAA;UACA,KAAAH,KAAA,CAAAI,QAAA;QACA;MACA;IACA;EACA;EACAsB,OAAA;IACAC,gBAAA;MACA,KAAAC,KAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAlC,IAAA;QACA,KAAAE,QAAA,GAAAF,IAAA;MACA;IACA;IACAmC,aAAA;MACA,SAAAlC,OAAA,CAAAmC,QAAA;QACA,KAAAhC,KAAA,CAAAiC,MAAA,QAAApC,OAAA,CAAAqC,EAAA;MACA;MACA,KAAAN,KAAA,CAAAC,GAAA;QACAM,MAAA,OAAAnC;MACA,GAAA8B,IAAA,CAAAlC,IAAA;QACA,KAAAW,SAAA,GAAAX,IAAA,CAAAwC,OAAA;QACA,KAAA5B,KAAA,GAAAZ,IAAA,CAAAY,KAAA;QACA,KAAAC,KAAA,GAAAb,IAAA,CAAAa,KAAA;MACA;IACA;IACA4B,cAAAC,GAAA;MACA,KAAAtC,KAAA,CAAAK,OAAA,GAAAiC,GAAA;MACA,KAAAP,YAAA;IACA;IACA;IACAQ,WAAAD,GAAA;MACA,KAAAtC,KAAA,CAAAM,IAAA,GAAAgC,GAAA;MACA,KAAAP,YAAA;IACA;IACAS,UAAA;MACA,KAAAxC,KAAA,CAAAC,KAAA;MACA,KAAAD,KAAA,CAAAE,MAAA;MACA,KAAAF,KAAA,CAAAG,OAAA;MACA,KAAAH,KAAA,CAAAI,QAAA;MACA,KAAAJ,KAAA,CAAAyC,KAAA;IACA;IACAC,aAAAR,EAAA;MACA,KAAAS,QAAA;QACAC,iBAAA;QACAC,gBAAA;MACA,GAAAf,IAAA;QACA,KAAAF,KAAA,CAAAC,GAAA,kBAAAK,EAAA,EACAJ,IAAA,CAAAlC,IAAA;UACA,KAAAmC,YAAA;QACA;MACA;IACA;EACA;EACAe,QAAA;IACA,KAAAjD,OAAA,GAAAkD,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAAvB,eAAA;IACA,KAAAI,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}