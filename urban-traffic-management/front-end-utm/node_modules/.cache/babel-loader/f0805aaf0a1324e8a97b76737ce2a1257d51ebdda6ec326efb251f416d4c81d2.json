{"ast":null,"code":"export default {\n  name: \"AccuseSaveView\",\n  data() {\n    return {\n      account: null,\n      typeList: [],\n      formData: {\n        typeId: null,\n        typeName: null,\n        title: null,\n        description: null\n      },\n      limit: 1,\n      fileList: [],\n      fileCount: 0,\n      rules: {\n        typeId: [{\n          required: true,\n          message: '请选择投诉类型',\n          trigger: 'blur'\n        }],\n        title: [{\n          required: true,\n          message: '请输入投诉标题',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入投诉内容描述',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    getAccuseTypeList() {\n      this.$http.get('/accuse-type/list').then(data => {\n        this.typeList = data;\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.$refs.upload.clearFiles();\n    },\n    handleSuccess(response, file) {\n      if (response.code = '000000') {\n        this.$message.success('您的投诉发布成功!');\n      } else {\n        this.$message.error(`${response.code}:${response.msg}`);\n      }\n    },\n    handleSave(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.typeList.forEach(type => {\n            if (type.id == this.formData.typeId) {\n              this.formData.typeName = type.name;\n            }\n          });\n          this.formData.userId = this.account.id;\n          this.formData.userName = this.account.username;\n          this.$refs.upload.submit();\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  mounted() {\n    this.account = JSON.parse(localStorage.getItem('account'));\n    this.getAccuseTypeList();\n  }\n};","map":{"version":3,"names":["name","data","account","typeList","formData","typeId","typeName","title","description","limit","fileList","fileCount","rules","required","message","trigger","methods","getAccuseTypeList","$http","get","then","resetForm","formName","$refs","resetFields","upload","clearFiles","handleSuccess","response","file","code","$message","success","error","msg","handleSave","validate","valid","forEach","type","id","userId","userName","username","submit","mounted","JSON","parse","localStorage","getItem"],"sources":["src/views/AccuseSaveView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" style=\"display: flex; justify-content: space-between;align-items: center\">\r\n        <span>上传图片</span>\r\n      </div>\r\n      <div>\r\n        <el-upload\r\n            class=\"upload-demo\"\r\n            ref=\"upload\"\r\n            action=\"http://localhost:8888/accuse/save\"\r\n            :data=\"formData\"\r\n            :auto-upload=\"false\"\r\n            :on-success=\"handleSuccess\"\r\n            :limit=\"limit\"\r\n            :file-list=\"fileList\"\r\n            list-type=\"picture\">\r\n          <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选择图片</el-button>\r\n        </el-upload>\r\n      </div>\r\n    </el-card>\r\n    <el-card class=\"box-card\" style=\"margin-top: 10px\">\r\n      <div slot=\"header\" style=\"display: flex; justify-content: space-between;align-items: center\">\r\n        <span>输入投诉详细信息</span>\r\n      </div>\r\n      <div>\r\n        <el-form ref=\"form\" :model=\"formData\" :rules=\"rules\" label-width=\"120px\">\r\n          <el-form-item label=\"投诉标题\" prop=\"title\">\r\n            <el-input v-model=\"formData.title\"  placeholder=\"请输入投诉标题\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"投诉类型\" prop=\"typeId\">\r\n            <el-select v-model=\"formData.typeId\" placeholder=\"请选择投诉类型\" style=\"width: 100%\">\r\n              <el-option v-for=\"type in typeList\" :label=\"type.name\" :value=\"type.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"投诉内容描述\" prop=\"description\">\r\n            <el-input type=\"textarea\" rows=\"5\" v-model=\"formData.description\"  placeholder=\"请输入投诉内容描述\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button style=\"margin-top: 20px\" size=\"small\" type=\"primary\" @click=\"handleSave('form')\">发布投诉</el-button>\r\n            <el-button  size=\"small\" @click=\"resetForm('form')\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AccuseSaveView\",\r\n  data() {\r\n    return {\r\n      account: null,\r\n      typeList:[],\r\n      formData: {\r\n        typeId: null,\r\n        typeName: null,\r\n        title: null,\r\n        description: null\r\n      },\r\n      limit:1,\r\n      fileList:[],\r\n      fileCount:0,\r\n      rules: {\r\n        typeId: [\r\n          {required: true, message:'请选择投诉类型', trigger:'blur'}\r\n        ],\r\n        title: [\r\n          {required: true, message:'请输入投诉标题', trigger:'blur'}\r\n        ],\r\n        description: [\r\n          {required: true, message:'请输入投诉内容描述', trigger:'blur'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getAccuseTypeList() {\r\n      this.$http.get('/accuse-type/list').then((data) => {\r\n        this.typeList = data\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n      this.$refs.upload.clearFiles()\r\n    },\r\n    handleSuccess(response, file) {\r\n      if(response.code = '000000') {\r\n        this.$message.success('您的投诉发布成功!')\r\n      }else {\r\n        this.$message.error(`${response.code}:${response.msg}`)\r\n      }\r\n    },\r\n    handleSave(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.typeList.forEach((type) => {\r\n            if(type.id == this.formData.typeId) {\r\n              this.formData.typeName = type.name\r\n            }\r\n          })\r\n          this.formData.userId = this.account.id\r\n          this.formData.userName = this.account.username\r\n          this.$refs.upload.submit();\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.account = JSON.parse(localStorage.getItem('account'))\r\n    this.getAccuseTypeList()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAkDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,QAAA;QACAC,MAAA;QACAC,QAAA;QACAC,KAAA;QACAC,WAAA;MACA;MACAC,KAAA;MACAC,QAAA;MACAC,SAAA;MACAC,KAAA;QACAP,MAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,KAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,WAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,kBAAA;MACA,KAAAC,KAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAnB,IAAA;QACA,KAAAE,QAAA,GAAAF,IAAA;MACA;IACA;IACAoB,UAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,WAAA;MACA,KAAAD,KAAA,CAAAE,MAAA,CAAAC,UAAA;IACA;IACAC,cAAAC,QAAA,EAAAC,IAAA;MACA,IAAAD,QAAA,CAAAE,IAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;MACA;QACA,KAAAD,QAAA,CAAAE,KAAA,IAAAL,QAAA,CAAAE,IAAA,IAAAF,QAAA,CAAAM,GAAA;MACA;IACA;IACAC,WAAAb,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAc,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAlC,QAAA,CAAAmC,OAAA,CAAAC,IAAA;YACA,IAAAA,IAAA,CAAAC,EAAA,SAAApC,QAAA,CAAAC,MAAA;cACA,KAAAD,QAAA,CAAAE,QAAA,GAAAiC,IAAA,CAAAvC,IAAA;YACA;UACA;UACA,KAAAI,QAAA,CAAAqC,MAAA,QAAAvC,OAAA,CAAAsC,EAAA;UACA,KAAApC,QAAA,CAAAsC,QAAA,QAAAxC,OAAA,CAAAyC,QAAA;UACA,KAAApB,KAAA,CAAAE,MAAA,CAAAmB,MAAA;QACA;UACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAA3C,OAAA,GAAA4C,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAAhC,iBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}